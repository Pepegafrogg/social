{"version":3,"file":"static/js/48.c238b05f.chunk.js","mappings":"4MAKMA,EAA6B,SAACC,GACjC,MAAO,CACJC,QAASD,EAAME,KAAKD,QAEzB,E,UCRD,EAAuB,sBAAvB,EAA+D,iCAA/D,EAAkH,iCAAlH,EAAmK,+BAAnK,EAAmN,gC,UCAnN,GAAgB,UAAY,8BAA8B,OAAS,4BCenE,EAZmB,SAACE,GACjB,OACG,gBAAKC,UAAWC,EAAAA,UAAhB,UACG,SAAC,KAAD,CAASC,GAAE,oBAAeH,EAAMI,IAC7BH,UAAW,SAAAI,GAAO,OAAIA,EAAQC,SAAWJ,EAAAA,OAAiBA,EAAAA,IAAxC,EADrB,SAGIF,EAAMO,QAIlB,ECbD,EAA4B,+BAA5B,EAA2E,mCAA3E,EAAuH,4BAAvH,EAAmK,mCAAnK,EAA0N,uCCmB1N,EAjBoB,SAACP,GAClB,OACG,iBAAKC,UAAWC,EAAhB,WACG,iBAAKD,UAAWC,EAAhB,WACG,gBAAKD,UAAWC,KAChB,gBAAKD,UAAWC,EAAhB,SACIF,EAAMO,WAGb,gBAAKN,UAAWC,EAAhB,SACIF,EAAMQ,YAKlB,E,qCCTKC,GAAcC,EAAAA,EAAAA,GAAiB,IAU/BC,GAAmBC,EAAAA,EAAAA,GAAU,CAAEC,KAAM,WAAlBD,EATF,SAACZ,GACrB,OACG,kBAAMc,SAAUd,EAAMe,aAAtB,WACG,SAACC,EAAA,EAAD,CAAOC,UAAWC,EAAAA,GAAUX,KAAM,aAAcY,MAAOnB,EAAMoB,eAAgBC,SAAU,CAACC,EAAAA,EAAUb,GAAcc,YAAY,qBAA5H,gBACA,gCAAM,qCAAN,SAGR,IA8BD,EA1BgB,SAACvB,GACd,IAAMwB,EAAkBxB,EAAMyB,QAAQC,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAYvB,GAAIuB,EAAKvB,GAAIG,KAAMoB,EAAKpB,MAAWoB,EAAKvB,GAAxD,IACxCwB,EAAmB5B,EAAM6B,SAASH,KAAI,SAAAC,GAAI,OAAI,SAAC,EAAD,CAAavB,GAAIuB,EAAKvB,GAAIG,KAAMoB,EAAKpB,KAAMC,QAASmB,EAAKnB,SAAcmB,EAAKvB,GAAhF,IAKhD,OAAKJ,EAAMF,SAER,iBAAKG,UAAWC,EAAhB,WACG,gBAAKD,UAAWC,EAAhB,sBACA,iBAAKD,UAAWC,EAAhB,WACG,gBAAKD,UAAWC,EAAhB,SACIsB,KAEJ,iBAAKvB,UAAWC,EAAhB,WACG,+BAAO0B,MACP,gBAAK3B,UAAU,MAAf,UACG,SAACU,EAAD,CAAkBG,SAdb,SAACgB,GAClB9B,EAAM+B,YAAYD,EAASE,WAC7B,gBAC0B,SAAC,KAAD,CAAU7B,GAAI,UAiB3C,EC9BK8B,EAAqB,CAAEF,YAAAA,EAAAA,GAI7B,GAFyBG,EAAAA,EAAAA,KAAQC,EAAAA,EAAAA,KAVT,SAACtC,GACtB,MAAO,CACJ4B,QAAS5B,EAAMuC,WAAWC,WAC1BR,SAAUhC,EAAMuC,WAAWE,aAC3BlB,eAAgBvB,EAAMuC,WAAWE,aAAalB,eAC9CtB,QAASD,EAAME,KAAKD,QAEzB,GAGyDmC,IPN1B,SAACM,GAQ9B,OAFuCJ,EAAAA,EAAAA,IAAQvC,EAARuC,EAJb,SAACnC,GACxB,OAAKA,EAAMF,SACJ,SAACyC,GAAD,UAAevC,KADK,SAAC,KAAD,CAAUG,GAAI,UAE3C,GAIH,GOHwB+B,CAAwEM,E","sources":["hoc/WithAuthRedirect.jsx","webpack://what/./src/components/dialogs/Dialogs.module.css?04a9","webpack://what/./src/components/dialogs/dialogItem/DialogItem.module.css?807d","components/dialogs/dialogItem/DialogItem.jsx","webpack://what/./src/components/dialogs/messageItem/MessageItem.module.css?9a67","components/dialogs/messageItem/MessageItem.jsx","components/dialogs/Dialogs.jsx","components/dialogs/DialogsContainer.jsx"],"sourcesContent":["import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isLogin: state.auth.isLogin,\r\n   }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n   const RedirectComponent = (props) => {\r\n      if (!props.isLogin) return <Navigate to={'/login'} />\r\n      return <Component {...props} />\r\n   }\r\n   const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n// export const WithAuthRedirect = (Component) => {\r\n//    class RedirectComponent extends React.Component {\r\n//       render() {\r\n//          if (!this.props.isLogin) return <Navigate to={'/login'} />\r\n//          return <Component {...this.props} />\r\n//       }\r\n//    }\r\n//    return RedirectComponent\r\n// }\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Dialogs_main__vjJW+\",\"dialogs_wrapper\":\"Dialogs_dialogs_wrapper__yyAri\",\"dialogs__header\":\"Dialogs_dialogs__header__Wbywn\",\"dialogs__item\":\"Dialogs_dialogs__item__ACkJP\",\"messages__item\":\"Dialogs_messages__item__reR4H\"};","// extracted by mini-css-extract-plugin\nexport default {\"companion\":\"DialogItem_companion__2bDgy\",\"active\":\"DialogItem_active__h3syI\"};","import React from 'react';\r\nimport { NavLink, Route, Router } from 'react-router-dom';\r\nimport classes from './DialogItem.module.css'\r\n\r\nconst DialogItem = (props) => {\r\n   return (\r\n      <div className={classes.companion}>\r\n         <NavLink to={`/messages/${props.id}`}\r\n            className={navData => navData.isActive ? classes.active : classes.item}\r\n         >\r\n            {props.name}\r\n         </NavLink>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default DialogItem;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"companion\":\"MessageItem_companion__FrrPG\",\"companionInfo\":\"MessageItem_companionInfo__qkRnF\",\"avatar\":\"MessageItem_avatar__br-Vu\",\"companionName\":\"MessageItem_companionName__1ErhB\",\"companionMessages\":\"MessageItem_companionMessages__EcQtN\"};","import React from 'react';\r\nimport classes from './MessageItem.module.css';\r\n\r\nconst MessageItem = (props) => {\r\n   return (\r\n      <div className={classes.companion}>\r\n         <div className={classes.companionInfo}>\r\n            <div className={classes.avatar}></div>\r\n            <div className={classes.companionName}>\r\n               {props.name}\r\n            </div>\r\n         </div>\r\n         <div className={classes.companionMessages}>\r\n            {props.message}\r\n         </div>\r\n\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MessageItem;\r\n","import React from 'react';\r\nimport classes from './Dialogs.module.css';\r\nimport DialogItem from './dialogItem/DialogItem';\r\nimport MessageItem from './messageItem/MessageItem';\r\nimport { Navigate } from 'react-router-dom';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { TextArea } from '../common/FormsControls/FormsControls';\r\nimport { maxLengthCreator, required } from '../../utils/validators/validator';\r\n\r\nconst maxLength10 = maxLengthCreator(10)\r\nconst AddMessageForm = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit}>\r\n         <Field component={TextArea} name={'newMessage'} value={props.newMessageBody} validate={[required, maxLength10]} placeholder='Enter your message'> </Field>\r\n         <div> <button>Send</button> </div>\r\n      </form>\r\n   )\r\n}\r\n\r\nconst DialogsReduxForm = reduxForm({ form: 'Message' })(AddMessageForm)\r\n\r\nconst Dialogs = (props) => {\r\n   const dialogsElements = props.dialogs.map(item => <DialogItem id={item.id} name={item.name} key={item.id} />)\r\n   const messagesElements = props.messages.map(item => <MessageItem id={item.id} name={item.name} message={item.message} key={item.id} />)\r\n\r\n   const sendMessage = (formData) => {\r\n      props.sendMessage(formData.newMessage)\r\n   }\r\n   if (!props.isLogin) return <Navigate to={'/login'} />\r\n   return (\r\n      <div className={classes.main}>\r\n         <div className={classes.dialogs__header}>Dialogs</div>\r\n         <div className={classes.dialogs_wrapper}>\r\n            <div className={classes.dialogs__item}>\r\n               {dialogsElements}\r\n            </div>\r\n            <div className={classes.messages__item}>\r\n               <div> {messagesElements}</div>\r\n               <div className='123'>\r\n                  <DialogsReduxForm onSubmit={sendMessage} />\r\n               </div>\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Dialogs;\r\n","import { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { WithAuthRedirect } from '../../hoc/WithAuthRedirect';\r\nimport { sendMessage } from '../../redux/dialogsReducer';\r\nimport Dialogs from './Dialogs';\r\n\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      dialogs: state.dialogPage.dialogData,\r\n      messages: state.dialogPage.messagesData,\r\n      newMessageBody: state.dialogPage.messagesData.newMessageBody,\r\n      isLogin: state.auth.isLogin\r\n   }\r\n}\r\nconst mapDispatchToProps = { sendMessage }\r\n\r\nconst DialogsContainer = compose(connect(mapStateToProps, mapDispatchToProps), WithAuthRedirect)(Dialogs)\r\n\r\nexport default DialogsContainer;\r\n"],"names":["mapStateToPropsForRedirect","state","isLogin","auth","props","className","classes","to","id","navData","isActive","name","message","maxLength10","maxLengthCreator","DialogsReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","value","newMessageBody","validate","required","placeholder","dialogsElements","dialogs","map","item","messagesElements","messages","formData","sendMessage","newMessage","mapDispatchToProps","compose","connect","dialogPage","dialogData","messagesData","Component","Dialogs"],"sourceRoot":""}