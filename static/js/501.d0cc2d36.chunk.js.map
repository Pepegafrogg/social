{"version":3,"file":"static/js/501.d0cc2d36.chunk.js","mappings":"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","sources":["webpack://what/./src/components/main/Header/Header.module.css?a3e5","components/main/Header/Header.jsx","webpack://what/./src/components/main/Main.module.css?be8c","webpack://what/./src/components/main/MyPosts/MyPost/MyPost.module.css?965d","components/main/MyPosts/MyPost/MyPost.jsx","webpack://what/./src/components/main/MyPosts/MyPosts.module.css?5e57","components/main/MyPosts/MyPosts.jsx","components/main/MyPosts/MyPostsContainer.jsx","webpack://what/./src/components/main/Profile/Profile.module.css?12f1","webpack://what/./src/components/main/Profile/ProfileItem/ProfileItem.module.css?b3c8","components/main/Profile/ProfileItem/ProfileItem.jsx","components/main/Profile/ProfileStatus/ProfileStatus.jsx","components/main/Profile/Profile.jsx","components/main/Profile/ProfileContainer.jsx","components/main/Main.jsx","hoc/WithAuthRedirect.jsx"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"header\":\"Header_header__GS3ez\",\"header__img\":\"Header_header__img__RH0XN\"};","import React from 'react';\r\nimport classes from './Header.module.css'\r\n\r\nconst Header = () => {\r\n   return (\r\n      <div className={classes.header}>\r\n         <img className={classes.header__img} src=\"http://green-forest36.ru/wp-content/uploads/2020/04/2-1.jpg\" alt=\"\" />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Header;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"Main_main__sqtny\"};","// extracted by mini-css-extract-plugin\nexport default {\"post\":\"MyPost_post__M2UW-\",\"postText\":\"MyPost_postText__+AQNl\",\"postLikes\":\"MyPost_postLikes__Ly3YA\"};","import React from 'react';\r\nimport classes from './MyPost.module.css'\r\n\r\nconst MyPost = (props) => {\r\n   return (\r\n      <div className={classes.post}>\r\n         <div className={classes.postText}>{props.post}</div>\r\n         <div className={classes.postLikes}>likes: {props.likes}</div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MyPost;\r\n","// extracted by mini-css-extract-plugin\nexport default {\"main\":\"MyPosts_main__V2bPk\",\"formname\":\"MyPosts_formname__UdwmH\",\"form\":\"MyPosts_form__kk4D-\",\"listOfPosts\":\"MyPosts_listOfPosts__suJiJ\"};","import React from 'react';\r\nimport { Field, reduxForm } from 'redux-form';\r\nimport { maxLengthCreator, required } from '../../../utils/validators/validator';\r\nimport { TextArea } from '../../common/FormsControls/FormsControls';\r\nimport MyPost from './MyPost/MyPost';\r\nimport classes from './MyPosts.module.css'\r\n\r\nconst maxLength5 = maxLengthCreator(5)\r\nconst AddPost = (props) => {\r\n   return (\r\n      <form onSubmit={props.handleSubmit} className={classes.form}>\r\n         <Field component={TextArea} name={'postText'} placeholder={'Write your post'} validate={[required, maxLength5]}></Field>\r\n         <button>add post</button>\r\n      </form>\r\n   )\r\n}\r\nconst AddPostReduxForm = reduxForm({ form: 'addPost', })(AddPost)\r\nconst MyPosts = (props) => {\r\n   const postsElements = props.posts.map(p => <MyPost id={p.id} post={p.post} likes={p.likes} key={p.id} />)\r\n   const addPost = (formData) => {\r\n      props.addPost(formData.postText)\r\n   }\r\n   return (\r\n      <div className={classes.main}>\r\n         <div className={classes.formname}>My posts</div>\r\n         <AddPostReduxForm onSubmit={addPost} />\r\n         <div className={classes.listOfPosts}>\r\n            {postsElements}\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default MyPosts\r\n","import React from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { addPost } from '../../../redux/profileReducer';\r\nimport MyPost from './MyPosts';\r\n\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      posts: state.profilePage.postsData,\r\n   }\r\n}\r\nconst mapDispatchToProps = { addPost }\r\n\r\nconst MyPostsContainer = connect(mapStateToProps, mapDispatchToProps)(MyPost)\r\nexport default MyPostsContainer\r\n","// extracted by mini-css-extract-plugin\nexport default {\"profile\":\"Profile_profile__RVcGJ\",\"profileImg\":\"Profile_profileImg__RbAgh\",\"profileName\":\"Profile_profileName__shgpi\",\"profileInfo\":\"Profile_profileInfo__h+uBQ\",\"profileOtherInfo\":\"Profile_profileOtherInfo__Y6-nb\"};","// extracted by mini-css-extract-plugin\nexport default {\"profileOtherinfoItem\":\"ProfileItem_profileOtherinfoItem__CdfQa\"};","import React from 'react';\r\nimport classes from './ProfileItem.module.css'\r\nconst ProfileItem = (props) => {\r\n   return (\r\n      <div className={classes.profileOtherinfoItem}>\r\n         {props.value}\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default ProfileItem;\r\n","import React, { Component, useEffect, useState } from 'react';\r\n\r\n\r\nconst ProfileStatus = (props) => {\r\n   let [editMode, setEditMode] = useState(false);\r\n   let [status, setStatus] = useState(props.status);\r\n\r\n   useEffect(() => {\r\n      setStatus(props.status)\r\n   }, [props.status]);\r\n\r\n   const activeState = () => {\r\n      setEditMode(true)\r\n   }\r\n   const deactiveState = () => {\r\n      setEditMode(false)\r\n      props.updateStatus(status)\r\n   }\r\n   const onStatusChange = (e) => {\r\n      setStatus(e.target.value)\r\n   }\r\n\r\n   return (\r\n      <div>\r\n         {editMode\r\n            ? <div> <input onChange={onStatusChange} autoFocus={true} onBlur={deactiveState} value={status} /> </div>\r\n            : <div> <span onDoubleClick={activeState} >{props.status}</span> </div>\r\n         }\r\n      </div>\r\n   )\r\n}\r\n\r\n\r\nexport default ProfileStatus;\r\n\r\n\r\n   // state = {\r\n   //    editMode: false,\r\n   //    status: this.props.status\r\n   // }\r\n   // activeState = () => {\r\n   //    this.setState({\r\n   //       editMode: true,\r\n   //    })\r\n   // }\r\n   // deactiveState = () => {\r\n   //    this.setState({\r\n   //       editMode: false\r\n   //    })\r\n   //    this.props.updateStatus(this.state.status)\r\n   // }\r\n   // onStatusChange = (e) => {\r\n   //    console.log(e.target.value);\r\n   //    this.setState({\r\n   //       status: e.target.value\r\n   //    })\r\n   // }\r\n   // componentDidUpdate(prevProps, prevState) {\r\n   //    if (prevProps.status !== this.props.status) {\r\n   //       this.setState({\r\n   //          status: this.props.status\r\n   //       })\r\n   //    }\r\n   // }\r\n   // render() {","import React from 'react';\r\nimport { updateStatus } from '../../../redux/profileReducer';\r\nimport PreLoader from '../../common/preLoader/preLoader';\r\nimport { userPhoto } from '../../users/userItem/usersItem';\r\nimport classes from './Profile.module.css'\r\nimport ProfileItem from './ProfileItem/ProfileItem';\r\nimport ProfileStatus from './ProfileStatus/ProfileStatus';\r\n\r\nconst Profile = (props) => {\r\n   if (!props.profile) return <PreLoader />\r\n   return (\r\n      <div className={classes.profile}>\r\n         <div className={classes.profileImg}>\r\n            <img src={props.profile.photos.large || userPhoto} alt=\"\" />\r\n         </div>\r\n         <div className={classes.profileInfo}>\r\n            <div className={classes.profileName}>\r\n               {props.profile.fullName}\r\n            </div>\r\n            <div className={classes.profileOtherInfo}>\r\n               <ProfileStatus status={props.status} profile={props.profile} updateStatus={props.updateStatus} />\r\n               <ProfileItem value={'Date of birth: 2january'} />\r\n               <ProfileItem value={'City: Minsk'} />\r\n               <ProfileItem value={`Job: ${props.profile.lookingForAJob}`} />\r\n               <ProfileItem value={`Status: ${props.profile.aboutMe}`} />\r\n            </div>\r\n         </div>\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Profile;\r\n","import React from 'react'\r\nimport { connect } from 'react-redux'\r\nimport { getUserProfile, updateStatus, getStatus } from '../../../redux/profileReducer'\r\nimport Profile from './Profile'\r\nimport { Navigate, useLocation, useNavigate, useParams, } from 'react-router-dom';\r\nimport { WithAuthRedirect } from '../../../hoc/WithAuthRedirect';\r\nimport { compose } from 'redux';\r\n\r\nfunction withRouter(Component) {\r\n   function ComponentWithRouterProp(props) {\r\n      let location = useLocation();\r\n      let navigate = useNavigate();\r\n      let params = useParams();\r\n      return (\r\n         <Component\r\n            {...props}\r\n            router={{ location, navigate, params }}\r\n         />\r\n      );\r\n   }\r\n\r\n   return ComponentWithRouterProp;\r\n}\r\n\r\nclass ProfileContainer extends React.Component {\r\n\r\n   componentDidMount() {\r\n      let userId = this.props.router.params.userId\r\n      if (!userId) {\r\n         userId = this.props.authUserId\r\n         if (!userId) {\r\n            // <Navigate to={'/login'} />\r\n            userId = 2\r\n         }\r\n      }\r\n      this.props.getUserProfile(userId)\r\n      this.props.getStatus(userId)\r\n   }\r\n\r\n   render() {\r\n      return (\r\n         <Profile {...this.props} profile={this.props.profile} />\r\n      )\r\n   }\r\n}\r\nconst mapStateToProps = (state) => {\r\n   return {\r\n      profile: state.profilePage.profile,\r\n      status: state.profilePage.status,\r\n      authUserId: state.auth.userId,\r\n      isLogin: state.auth.Islogin\r\n   }\r\n}\r\nconst mapDispatchToProps = { getUserProfile, getStatus, updateStatus }\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withRouter,)(ProfileContainer)\r\n\r\n","import React from 'react';\r\nimport Header from './Header/Header';\r\nimport classes from './Main.module.css'\r\nimport MyPostsContainer from './MyPosts/MyPostsContainer';\r\nimport ProfileContainer from './Profile/ProfileContainer';\r\n\r\nconst Main = (props) => {\r\n   return (\r\n      <div className={classes.main}>\r\n         <Header />\r\n         <ProfileContainer />\r\n         <MyPostsContainer />\r\n      </div>\r\n   );\r\n}\r\n\r\nexport default Main;\r\n","import React from \"react\"\r\nimport { connect } from \"react-redux\"\r\nimport { Navigate } from \"react-router-dom\"\r\n\r\n\r\nconst mapStateToPropsForRedirect = (state) => {\r\n   return {\r\n      isLogin: state.auth.isLogin,\r\n   }\r\n}\r\n\r\nexport const WithAuthRedirect = (Component) => {\r\n\r\n   const RedirectComponent = (props) => {\r\n      if (!props.isLogin) return <Navigate to={'/login'} />\r\n      return <Component {...props} />\r\n   }\r\n   const ConnectedAuthRedirectComponent = connect(mapStateToPropsForRedirect)(RedirectComponent)\r\n\r\n   return ConnectedAuthRedirectComponent\r\n}\r\n\r\n\r\n\r\n\r\n// export const WithAuthRedirect = (Component) => {\r\n//    class RedirectComponent extends React.Component {\r\n//       render() {\r\n//          if (!this.props.isLogin) return <Navigate to={'/login'} />\r\n//          return <Component {...this.props} />\r\n//       }\r\n//    }\r\n//    return RedirectComponent\r\n// }\r\n"],"names":["className","classes","src","alt","props","post","likes","maxLength5","maxLengthCreator","AddPostReduxForm","reduxForm","form","onSubmit","handleSubmit","Field","component","TextArea","name","placeholder","validate","required","postsElements","posts","map","p","id","formData","addPost","postText","mapDispatchToProps","connect","state","profilePage","postsData","MyPost","value","useState","editMode","setEditMode","status","setStatus","useEffect","onChange","e","target","autoFocus","onBlur","updateStatus","onDoubleClick","profile","photos","large","userPhoto","fullName","lookingForAJob","aboutMe","ProfileContainer","userId","this","router","params","authUserId","getUserProfile","getStatus","React","compose","auth","isLogin","Islogin","Component","location","useLocation","navigate","useNavigate","useParams","mapStateToPropsForRedirect","WithAuthRedirect","to"],"sourceRoot":""}